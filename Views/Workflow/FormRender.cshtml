@using System.Text.Json
@model Systemize.Models.Workflow

@{
    ViewData["Title"] = "Render";
    bool readonlyform = false;
}

<script src="~/lib/jquery/dist/jquery.min.js" type="text/javascript"></script>
<script src="~/lib/formbuilder/form-render.min.js" type="text/javascript"></script>

<div id="fb-editor"></div>

@if (!readonlyform)
{
    <div id="fb-save-area">
        <button id="fb-save" type="button" class="btn btn-primary">Save</button>
    </div>
}


<script>
   
    var local_form = @Html.Raw(JsonSerializer.Serialize(Model.FormData));
 
    jQuery(function($) {
        $(document.getElementById('fb-editor')).formRender({
            dataType: 'json',
            // onload data
            formData: local_form
        });

        var id = @Model.Id.ToString()

        $('#fb-save').on('click', function() {
            var formData = $('#fb-editor').formRender('userData');
            $.ajax({
                type: 'POST',
                url: "/Workflow/FormRenderSubmit/" + id,
                data: JSON.stringify(formData),
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                success: function(response) {
                    alert('Form data saved successfully!');
                },
                error: function(error) {
                    alert('Error saving form data.');
                }
            });
        });
    });
</script>


@if (readonlyform)
{
    <script>
         jQuery(function($) {
               $("#fb-editor :input").attr('readonly', 'readonly');
               $("#fb-editor :input").attr("disabled", true);
               $("#fb-editor :input").prop('readonly', 'readonly');
               $("#fb-editor :input").prop("disabled", true);
            })
    </script>
}




<div>
    <a asp-action="Details" asp-route-id="@Model.Id" class="float-end mx-2">Back to Workflow</a>
</div>